Share data between ESphome node without using Homeassistant.
============================================================
You need two esphome nodes. One will be the server, and the other will be the client/s ( can be multiple). You must set up a web server on your primary esphome to push the required sensor data using the following web server component.

See :doc:`/components/web_server`

.. code-block:: yaml

    # Webserver configration
    web_server:
      port: 80
  
http_request component
----------------------
Using the following code, set up a http_request component on client/s with http_request_data id.

See :doc:`/components/http_request`

.. code-block:: yaml

    http_request:
      useragent: esphome/device
      timeout: 10s
      id: http_request_data

Automation
**********
To automate the request for data, we will add an interval component and the URL is linked to the sensor id for which the state is required.

See `Rest Api </web-api/index.html#rest-api>`.

it is generated by following rules 



    The domain is the type of the component, for example sensor or light. id refers to the id of the component - this ID is created by taking the name of the component, stripping out all non-alphanumeric characters, making everything lowercase and replacing all spaces by underscores. To confirm the <id> to use, you can set the log level to VERY_VERBOSE and check the object_id: in the logs.


.. code-block:: yaml

    interval:
  - interval: 3s
    then:
      - http_request.get: 
          url: http://ip.or.hostname.of.the.server.node/sensor/id.of.the.sensor.for.which.data.is.required
          on_response:
            then:
              - lambda: |-
                  json::parse_json(id(http_request_data).get_string(), [](JsonObject root) {
                      id(id_of_the_template_sensor).publish_state(root["value"]);
                  });


Template sensor 
***************

.. code-block:: yaml

    sensor:
      - platform: template
        name: "name of the template sensor"
        id: id_of_the_template_sensor
                  


                  
                  
                  
Result
======

.. figure:: images/server.png
    :align: center
    :width: 40.0%

Server side actual sensor.


.. figure:: images/clients.png
    :align: center
    :width: 40.0%

Client side template sensor.
  
